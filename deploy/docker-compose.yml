version: "3.3"

services:
  traefik:
    image: "traefik:v2.4"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      #- "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=$EMAIL"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      #- "8080:8080"
    volumes:
      - "/root/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  board:
    image: robdrynkin/lambda-board:latest
    container_name: "board"
    command: --db "postgres://postgres@postgres/database" --port 80 --static /static
    ports:
      - "80"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.board.rule=Host(`$DOMAIN`)"
      - "traefik.http.routers.board.entrypoints=websecure"
      - "traefik.http.routers.board.tls.certresolver=myresolver"

  postgres:
    image: postgres:13-alpine
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=database
      - POSTGRES_USER=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    restart: unless-stopped
    volumes:
      - "/root/pg_db:/var/lib/postgresql/data"
